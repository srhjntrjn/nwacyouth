{"version":3,"sources":["webpack://ywac-youth/./src/containers/Resources/style.ts","webpack://ywac-youth/./src/templates/resources.tsx"],"names":["Content","styled","props","theme","palette","primary","down","ResourceContainer","ResourceTitle","location","pageContext","title","language","resource","seoDescription","seoKeyword","pathname","description","keyword","colors","className","map","item","resources","length","data","d","content","callToActionUrl","url","callToActionText","buttonText","callToActionIsExternal","isLinkExternal","key","category"],"mappings":"mNAGaA,EAAUC,oBAAH,0DAAGA,CAAH,4DAET,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,WACpCC,UAAK,OC+BHC,EAAoBN,oBAAH,uEAAGA,CAAH,iGAQjBO,EAAgBP,mBAAH,mEAAGA,CAAH,yBAInB,WAAe,GAGa,IAF1BQ,EAEyB,EAFzBA,SAEyB,IADzBC,YAAyBC,GACA,EADVC,SACU,EADAD,OAAOE,EACP,EADOA,SAAUC,EACjB,EADiBA,eAAgBC,EACjC,EADiCA,WAE1D,OACE,gBAAC,IAAD,CAAQN,SAAUA,GAChB,gBAAC,KAAD,CACEO,SAAUP,EAASO,SACnBC,YAAaH,EACbI,QAASH,EACTJ,MAAOA,IAET,gBAAC,KAAD,CAAQQ,OAAQ,CAAC,UAAW,UAAW,YACrC,0BAAKR,IAEP,gBAAC,KAAD,CAAWQ,OAAQ,CAAC,UAAW,UAAW,UAAW,aACrD,gBAACnB,EAAD,KACE,uBAAKoB,UAAU,aACZP,EAASQ,KAAI,SAACC,GACb,GAAuB,OAAnBA,EAAKC,WAAgD,IAA1BD,EAAKC,UAAUC,OAA9C,CAIA,IAAIC,EAAOH,EAAKC,UAAUF,KAAI,SAACK,GAC7B,MAAO,CACLf,MAAOe,EAAEf,MACTgB,QAASD,EAAET,YACXW,gBAAiBF,EAAEG,IACnBC,iBAAkBJ,EAAEK,WACpBC,uBAAwBN,EAAEO,mBAI9B,OACE,gBAAC1B,EAAD,CAAmB2B,IAAKZ,EAAKa,UAC3B,uBAAKf,UAAU,OACb,uBAAKA,UAAU,6BACb,gBAACZ,EAAD,KAAgBc,EAAKa,UACrB,gBAAC,KAAD,CAAWV,KAAMA","file":"component---src-templates-resources-tsx-b8cece202132fe0d78a3.js","sourcesContent":["import styled from 'styled-components'\nimport { down } from 'styled-breakpoints'\n\nexport const Content = styled.div`\n  padding: 120px 0 120px 0;\n  color: ${props => props.theme.palette.primary};\n  ${down('md')} {\n    padding: 70px 0;\n  }\n`\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport {\n  FaLinkedin,\n  FaTwitter,\n  FaFacebookF,\n  FaGlobeAmericas,\n} from \"react-icons/fa\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\nimport Layout from \"./../layout\";\nimport { SEO, StripeBar, Banner, Accordion } from \"./../components\";\nimport { Content } from \"./../containers/Resources/style\";\nimport styled from \"styled-components\";\n\ninterface IResourcesPageProps {\n  location: {\n    pathname: string;\n  };\n  pageContext: {\n    language: string;\n    title: string;\n    seoKeyword: string;\n    seoDescription: string;\n    resource: {\n      category: string;\n      resources: {\n        description: string;\n        title: string;\n        url: string;\n        buttonText: string;\n        isLinkExternal: boolean;\n      }[];\n    }[];\n  };\n}\n\nconst ResourceContainer = styled.div`\n  background: #38789616;\n  border-radius: 20px;\n  padding: 30px;\n  padding-bottom: 0px;\n  margin-bottom: 30px;\n`;\n\nconst ResourceTitle = styled.h2`\n  margin-bottom: 30px;\n`;\n\nexport default ({\n  location,\n  pageContext: { language, title, resource, seoDescription, seoKeyword },\n}: IResourcesPageProps) => {\n  return (\n    <Layout location={location}>\n      <SEO\n        pathname={location.pathname}\n        description={seoDescription}\n        keyword={seoKeyword}\n        title={title}\n      />\n      <Banner colors={[\"#397897\", \"#00587F\", \"#80D0DB\"]}>\n        <h1>{title}</h1>\n      </Banner>\n      <StripeBar colors={[\"#D16428\", \"#E58630\", \"#DA5027\", \"#D29329\"]} />\n      <Content>\n        <div className=\"container\">\n          {resource.map((item: any) => {\n            if (item.resources === null || item.resources.length === 0) {\n              return;\n            }\n\n            let data = item.resources.map((d: any) => {\n              return {\n                title: d.title,\n                content: d.description,\n                callToActionUrl: d.url,\n                callToActionText: d.buttonText,\n                callToActionIsExternal: d.isLinkExternal,\n              };\n            });\n\n            return (\n              <ResourceContainer key={item.category}>\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12 my-12\">\n                    <ResourceTitle>{item.category}</ResourceTitle>\n                    <Accordion data={data} />\n                  </div>\n                </div>\n              </ResourceContainer>\n            );\n          })}\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nexport const resourcePageQuery = graphql`\n  query ResorucePageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}