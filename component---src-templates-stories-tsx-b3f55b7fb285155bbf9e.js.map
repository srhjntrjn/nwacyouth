{"version":3,"sources":["webpack://ywac-youth/./src/containers/Stories/Story/style.ts","webpack://ywac-youth/./src/containers/Stories/Story/index.tsx","webpack://ywac-youth/./src/containers/Stories/style.ts","webpack://ywac-youth/./src/templates/stories.tsx"],"names":["Container","styled","props","theme","palette","middlePrimary","primary","darkSecondary","ImageContainer","down","name","story","slug","language","image","md","Remarkable","isFr","useLocation","pathname","startsWith","className","LazyLoadImage","src","publicURL","height","width","style","objectFit","alt","effect","Truncate","lines","ellipsis","href","ReactHTMLParser","render","Link","to","Content","location","data","pageContext","seoKeyword","seoDescription","title","keyword","description","colors","allMarkdownRemark","edges","filter","d","node","frontmatter","length","map","key","Story","type"],"mappings":"sRAGaA,EAAYC,oBAAH,4DAAGA,CAAH,oEACA,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,iBACxC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,QAAQE,WAE3B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,QAAQG,iBAQ7BC,EAAiBP,oBAAH,iEAAGA,CAAH,qCAEvBQ,UAAK,OCET,GDE0BR,kBAAH,6DAAGA,CAAH,2ECFvB,SAAe,GAA0D,IAAvDS,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MACvCC,EAAK,IAAIC,IAETC,GADMC,mBACKC,SAASC,WAAW,QAErC,OACE,gBAACpB,EAAD,CAAWqB,UAAU,SACnB,gBAACb,EAAD,KACE,gBAAC,EAAAc,cAAD,CACEC,IAAKT,aAAF,EAAEA,EAAOU,UACZC,OAAO,OACPC,MAAM,OACNC,MAAO,CAAEC,UAAW,SACpBC,IAAKnB,EACLoB,OAAO,UAIX,uBAAKT,UAAU,OACb,sBAAIA,UAAU,QAAQX,GACtB,gBAAC,KAAD,CAAiBW,UAAU,2BACzB,qBAAGA,UAAU,mBACX,gBAACU,EAAA,EAAD,CACEC,MAAO,EACPC,SACE,4BACE,qBAAGC,MAAsB,OAAbrB,EAAoB,MAAQ,IAAjC,UAA6CD,GAClD,yCAKLuB,QAAgBpB,EAAGqB,OAAOzB,OAKjC,gBAAC,KAAD,CAAaU,UAAU,WACrB,gBAAC,EAAAgB,KAAD,CAAMC,IAAoB,OAAbzB,EAAoB,MAAQ,IAAjC,UAA6CD,GACnD,4BACGK,EAAO,2BAA6B,6BCxDtCsB,EAAUtC,oBAAH,0DAAGA,CAAH,8EAET,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQE,WACpCG,UAAK,OCqBT,WAAe,GAIU,IAHvB+B,EAGsB,EAHtBA,SACAC,EAEsB,EAFtBA,KAEsB,IADtBC,YAAeC,EACO,EADPA,WAAYC,EACL,EADKA,eAGrB3B,GADMC,mBACKC,SAASC,WAAW,QAErC,OACE,gBAAC,IAAD,CAAQoB,SAAUA,GAChB,gBAAC,KAAD,CACErB,SAAUqB,EAASrB,SACnB0B,MAAO5B,EAAO,YAAc,UAC5B6B,QAASH,EACTI,YAAaH,IAEf,gBAAC,KAAD,CAAQI,OAAQ,CAAC,UAAW,UAAW,YACrC,0BAAK/B,EAAO,YAAc,UAA1B,KACA,sBAAII,UAAU,QACXJ,EACG,+HACA,4GAGR,gBAAC,KAAD,CAAW+B,OAAQ,CAAC,UAAW,UAAW,UAAW,aAErD,gBAACT,EAAD,KACE,uBAAKlB,UAAU,aAGA,IAFZoB,EAAKQ,kBAAkBC,MAAMC,QAC5B,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,YAAYzC,YAAcI,EAAO,KAAO,SACpDsC,OACA,sBAAIlC,UAAU,oBACXJ,EACG,sDACA,2CAGN,uBAAKI,UAAU,oBACZoB,EAAKQ,kBAAkBC,MACrBC,QACC,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,YAAYzC,YAAcI,EAAO,KAAO,SAErDuC,KAAI,YAAgC,IAArBF,EAAoB,EAA5BD,KAAQC,YACd,OACE,uBAAKjC,UAAU,gBAAgBoC,IAAKH,EAAY5C,MAC9C,gBAACgD,EAAUJ,UAQ3B,gBAAC,KAAD,KACE,0BACGrC,EACG,mNACA,6LAEN,uBAAKI,UAAU,QACb,gBAAC,KAAD,CAAQsC,KAAK,MAAMrB,GAAG,gBACnBrB,EAAO,wBAA0B","file":"component---src-templates-stories-tsx-b3f55b7fb285155bbf9e.js","sourcesContent":["import styled from 'styled-components'\nimport { down } from 'styled-breakpoints'\n\nexport const Container = styled.div`\n  border: 3px solid ${props => props.theme.palette.middlePrimary};\n  color: ${props => props.theme.palette.primary};\n  a {\n    color: ${props => props.theme.palette.darkSecondary};\n  }\n  .story-text span {\n    /* white-space: nowrap; */\n    /* display: flex; */\n  }\n`\n\nexport const ImageContainer = styled.div`\n  height: 360px;\n  ${down('md')} {\n    height: 180px;\n  }\n`\nexport const SocialIcon = styled.a`\n  margin-left: 24px;\n  &:before {\n    display: none;\n  }\n  &:first-child {\n    margin-left: 0;\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Remarkable } from 'remarkable'\nimport ReactHTMLParser from 'react-html-parser'\nimport { useLocation } from '@reach/router'\n\nimport Truncate from 'react-truncate'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\nimport 'react-lazy-load-image-component/src/effects/blur.css'\nimport { Container, ImageContainer } from './style'\nimport { TextContent, MarkDownContent } from './../../../components'\ninterface IStoryProps {\n  image?: any\n  name: string\n  story: string\n  slug: string\n  language: string\n}\n\nexport default ({ name, story, slug, language, image }: IStoryProps) => {\n  const md = new Remarkable()\n  const loc = useLocation()\n  const isFr = loc.pathname.startsWith('/fr/')\n\n  return (\n    <Container className='h-100'>\n      <ImageContainer>\n        <LazyLoadImage\n          src={image?.publicURL}\n          height='100%'\n          width='100%'\n          style={{ objectFit: 'cover' }}\n          alt={name}\n          effect='blur'\n        />\n      </ImageContainer>\n\n      <div className='p-4'>\n        <h4 className='mt-3'>{name}</h4>\n        <MarkDownContent className='mt-4 d-flex flex-column'>\n          <p className='mb-4 story-text'>\n            <Truncate\n              lines={5}\n              ellipsis={\n                <span>\n                  <a href={`${language === 'Fr' ? '/fr' : ''}/story/${slug}`}>\n                    <span>[...]</span>\n                  </a>\n                </span>\n              }\n            >\n              {ReactHTMLParser(md.render(story))}\n            </Truncate>\n          </p>\n        </MarkDownContent>\n\n        <TextContent className='mt-auto'>\n          <Link to={`${language === 'Fr' ? '/fr' : ''}/story/${slug}`}>\n            <span>\n              {isFr ? 'Lire l’histoire complète' : 'Read the full story'}\n            </span>\n          </Link>\n        </TextContent>\n      </div>\n    </Container>\n  )\n}\n","import styled from 'styled-components'\nimport { down } from 'styled-breakpoints'\n\nexport const Content = styled.div`\n  padding: 140px 0 120px 0;\n  color: ${props => props.theme.palette.primary};\n  ${down('md')} {\n    padding: 60px 0 60px 0 !important;\n  }\n`\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from './../layout'\nimport {\n  SEO,\n  StripeBar,\n  Banner,\n  Button,\n  SpotlightFooter,\n} from './../components'\nimport { Story } from './../containers/Stories'\nimport { Content } from './../containers/Stories/style'\nimport Image1 from './../images/image1.jpg'\nimport { useLocation } from '@reach/router'\n\ninterface StoriesPageProps {\n  location: {\n    pathname: string\n  }\n  data: any\n  pageContext: {\n    seoKeyword: string\n    seoDescription: string\n  }\n}\n\nexport default ({\n  location,\n  data,\n  pageContext: { seoKeyword, seoDescription },\n}: StoriesPageProps) => {\n  const loc = useLocation()\n  const isFr = loc.pathname.startsWith('/fr/')\n\n  return (\n    <Layout location={location}>\n      <SEO\n        pathname={location.pathname}\n        title={isFr ? 'Histoires' : 'Stories'}\n        keyword={seoKeyword}\n        description={seoDescription}\n      />\n      <Banner colors={['#397897', '#00587F', '#80D0DB']}>\n        <h1>{isFr ? 'Histoires' : 'Stories'} </h1>\n        <h2 className='mt-4'>\n          {isFr\n            ? 'Découvre ces jeunes autochtones qui sont des pionniers de l’égalité des genres et qui poursuivent fièrement leurs passions. '\n            : 'Check out these Indigenous youth who are gender equality trailblazers, proudly pursuing their passions.'}\n        </h2>\n      </Banner>\n      <StripeBar colors={['#D16428', '#E58630', '#DA5027', '#D29329']} />\n\n      <Content>\n        <div className='container'>\n          {data.allMarkdownRemark.edges.filter(\n            d => d.node.frontmatter.language === (isFr ? 'Fr' : 'En')\n          ).length === 0 ? (\n            <h2 className='text-center mb-5'>\n              {isFr\n                ? 'Reviens plus tard pour d’autres histoires de jeunes'\n                : 'Check back later for more youth stories'}\n            </h2>\n          ) : (\n            <div className='d-flex flex-wrap'>\n              {data.allMarkdownRemark.edges\n                .filter(\n                  d => d.node.frontmatter.language === (isFr ? 'Fr' : 'En')\n                )\n                .map(({ node: { frontmatter } }) => {\n                  return (\n                    <div className='col-md-4 mb-5' key={frontmatter.name}>\n                      <Story {...frontmatter} />\n                    </div>\n                  )\n                })}\n            </div>\n          )}\n        </div>\n      </Content>\n      <SpotlightFooter>\n        <h2>\n          {isFr\n            ? 'Es-tu un jeune autochtone qui poursuit fièrement sa passion? Tu as une histoire que tu aimerais partager? Présente ta propre histoire pour nous faire part de ce que tu fais pour défendre l’égalité des genres!'\n            : 'Are you an Indigenous youth proudly pursuing your passion? Have a story that you would like to share? Submit your own story to tell us what you’re doing to advocate for gender equality!'}\n        </h2>\n        <div className='mt-5'>\n          <Button type='url' to='/submitStory'>\n            {isFr ? 'Présente ton histoire' : 'Submit Your Story'}\n          </Button>\n        </div>\n      </SpotlightFooter>\n    </Layout>\n  )\n}\n\nexport const storiesPageQuery = graphql`\n  query StoriesPageQuery {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/stories/i\" }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            story\n            image {\n              publicURL\n            }\n            name\n            published\n            slug\n            language\n          }\n          fileAbsolutePath\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}